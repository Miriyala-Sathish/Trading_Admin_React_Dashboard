import { useState } from 'react';
import CountUp from 'react-countup';

const DailyRevenue = () => {
    const [selectedDate, setSelectedDate] = useState('May 14, 2025');

    // Core info (May 14, 2025)
    const currentRevenue = 9000; // ₹9,000
    const yesterdayRevenue = 8571; // ₹8,571
    const revenueChange = ((currentRevenue - yesterdayRevenue) / yesterdayRevenue * 100).toFixed(1); // +5.0%
    const revenueTarget = 10000; // ₹10,000
    const progressPercentage = (currentRevenue / revenueTarget * 100).toFixed(1); // 90%
    const lastUpdated = "May 28, 2025, 03:20 PM IST"; // Updated to current date and time

    // DOD/HOD Comparison
    const dodRevenue = 8571; // May 13: ₹8,571
    const dodChange = revenueChange; // +5.0%
    const lastHourRevenue = 450; // 14:34 to 15:34
    const hodChange = ((500 - lastHourRevenue) / lastHourRevenue * 100).toFixed(1); // +11.1%

    // Advanced Options
    const activeUsersRevenue = 6500; // ₹6,500
    const passiveUsersRevenue = 2500; // ₹2,500
    const referredUsersRevenue = 1000; // ₹1,000
    const churnImpact = 300; // ₹300 loss due to churn

    const handleExport = () => {
        // Ensure jsPDF is available in the window object
        const { jsPDF } = window.jspdf;
        if (!jsPDF) {
            alert('jsPDF library is not loaded. Please ensure it is included in your project.');
            return;
        }

        const doc = new jsPDF({
            orientation: 'portrait',
            unit: 'mm',
            format: 'a4',
        });

        // Colors and Fonts
        const primaryColor = '#3b82f6';
        const textColor = '#333333';
        const successColor = '#16a34a';
        const dangerColor = '#ef4444';
        doc.setFont('Helvetica', 'normal');

        // Title
        doc.setFontSize(20);
        doc.setTextColor(primaryColor);
        doc.text('Daily Revenue Report', 20, 20);

        // Subtitle (Selected Date)
        doc.setFontSize(12);
        doc.setTextColor(textColor);
        doc.text(`Date: ${selectedDate}`, 20, 30);
        doc.text(`Generated on: ${lastUpdated}`, 20, 38);

        // Section: Core Info
        doc.setFontSize(16);
        doc.setTextColor(primaryColor);
        doc.text('Core Info', 20, 50);

        doc.setFontSize(12);
        doc.setTextColor(textColor);
        doc.text(`Current Day's Revenue: ${currentRevenue.toLocaleString('en-IN', { style: 'currency', currency: 'INR' })}`, 20, 60);
        doc.setTextColor(revenueChange >= 0 ? successColor : dangerColor);
        doc.text(`vs Yesterday: ${revenueChange >= 0 ? '+' : ''}${revenueChange}%`, 20, 68);
        doc.setTextColor(textColor);
        doc.text(`Target Progress: ${progressPercentage}% of ${revenueTarget.toLocaleString('en-IN', { style: 'currency', currency: 'INR' })}`, 20, 76);

        // Section: DOD/HOD Comparison
        let yPos = 90;
        doc.setFontSize(16);
        doc.setTextColor(primaryColor);
        doc.text('DOD/HOD Comparison', 20, yPos);
        yPos += 10;

        doc.setFontSize(12);
        doc.setTextColor(textColor);
        doc.text('DOD Comparison:', 20, yPos);
        doc.setTextColor(dodChange >= 0 ? successColor : dangerColor);
        doc.text(`May 14 vs May 13: ${dodChange >= 0 ? '+' : ''}${dodChange}%`, 30, yPos + 8);
        yPos += 16;

        doc.setTextColor(textColor);
        doc.text('HOD Comparison:', 20, yPos);
        doc.setTextColor(hodChange >= 0 ? successColor : dangerColor);
        doc.text(`15:34 vs 14:34: ${hodChange >= 0 ? '+' : ''}${hodChange}%`, 30, yPos + 8);
        yPos += 16;

        // Section: Advanced Options
        doc.setFontSize(16);
        doc.setTextColor(primaryColor);
        doc.text('Advanced Options', 20, yPos);
        yPos += 10;

        doc.setFontSize(12);
        doc.setTextColor(textColor);
        doc.text('Active vs Passive Users:', 20, yPos);
        doc.text(`Active: ${activeUsersRevenue.toLocaleString('en-IN', { style: 'currency', currency: 'INR' })}`, 30, yPos + 8);
        doc.text(`Passive: ${passiveUsersRevenue.toLocaleString('en-IN', { style: 'currency', currency: 'INR' })}`, 30, yPos + 16);
        yPos += 24;

        doc.text('Revenue from Referred Users:', 20, yPos);
        doc.text(`${referredUsersRevenue.toLocaleString('en-IN', { style: 'currency', currency: 'INR' })}`, 30, yPos + 8);
        yPos += 16;

        doc.text('Subscription Churn Impact:', 20, yPos);
        doc.text(`Estimated Loss: ${churnImpact.toLocaleString('en-IN', { style: 'currency', currency: 'INR' })}`, 30, yPos + 8);

        // Footer
        doc.setFontSize(10);
        doc.setTextColor('#666666');
        doc.text('Generated by Admin Dashboard', 20, 280);
        doc.text('Page 1 of 1', 180, 280);

        // Download the PDF
        const fileName = `Daily_Revenue_${selectedDate.replace(/[^a-zA-Z0-9]/g, '_')}_${lastUpdated.replace(/[^a-zA-Z0-9]/g, '_')}.pdf`;
        doc.save(fileName);
    };

    return (
        <div className="button-content profit-page">
            {/* Banner */}
            <div className="banner">
                <div className="banner-content">
                    <h1>Daily Revenue Overview</h1>
                    <p>A comprehensive overview of Daily revenue.</p>
                </div>
            </div>

            {/* Controls/Filters */}
            <div className="controls">
                <div className="filter-group">
                    <label htmlFor="dateSelector">Select Date: </label>
                    <select
                        id="dateSelector"
                        value={selectedDate}
                        onChange={(e) => setSelectedDate(e.target.value)}
                    >
                        <option value="May 14, 2025">May 14, 2025</option>
                        <option value="May 13, 2025">May 13, 2025</option>
                        <option value="May 12, 2025">May 12, 2025</option>
                        <option value="May 11, 2025">May 11, 2025</option>
                    </select>
                </div>
                <button className="export-btn" onClick={handleExport}>
                    <ion-icon name="download-outline"></ion-icon> Export Data
                </button>
            </div>

            {/* Core Info */}
            <div className="profit-header revenue-header">
                <div className="profit-main">
                    <h2>Current Day’s Revenue</h2>
                    <div className="profit-amount revenue-amount">
                        <CountUp
                            start={0}
                            end={currentRevenue}
                            duration={2.5}
                            separator=","
                            prefix="₹"
                            suffix=""
                        />
                    </div>
                    <div className="last-updated">
                        Last Updated: {lastUpdated}
                    </div>
                </div>
                <div className="profit-changes">
                    <div className="change-item">
                        <span>vs Yesterday:</span>
                        <span className={revenueChange >= 0 ? 'change-up' : 'change-down'}>
                            {revenueChange >= 0 ? '▲' : '▼'} {revenueChange}%
                        </span>
                    </div>
                    <div className="progress-box">
                        <h3>Revenue Target Progress</h3>
                        <div className="progress-bar">
                            <div
                                className="progress-fill"
                                style={{ width: `${Math.min(progressPercentage, 100)}%` }}
                            ></div>
                        </div>
                        <p>{progressPercentage}% of {revenueTarget.toLocaleString('en-IN', { style: 'currency', currency: 'INR' })} target reached</p>
                    </div>
                </div>
            </div>

            {/* DOD/HOD Comparison */}
        <div className="insights-section_monthly_revenue">
    <div className="insight-box_monthly_revenue">
        <ion-icon name="trending-up-outline"></ion-icon>
        <div>
            <h3>DOD Comparison</h3>
            <p>May 14 vs May 13: <span className={dodChange >= 0 ? 'change-up' : 'change-down'}>
                {dodChange >= 0 ? '+' : ''}{dodChange}%
            </span></p>
        </div>
    </div>
    <div className="insight-box_monthly_revenue">
        <ion-icon name="bar-chart-outline"></ion-icon>
        <div>
            <h3>HOD Comparison</h3>
            <p>15:34 vs 14:34: <span className={hodChange >= 0 ? 'change-up' : 'change-down'}>
                {hodChange >= 0 ? '+' : ''}{hodChange}%
            </span></p>
        </div>
    </div>
</div>


       {/* Advanced Options */}
<div className="revenue-insights-section">
    <div className="active-passive-users-box">
        <ion-icon name="person-outline"></ion-icon>
        <div>
            <h3>Active vs Passive Users</h3>
            <p>Active: {activeUsersRevenue.toLocaleString('en-IN', { style: 'currency', currency: 'INR' })}</p>
            <p>Passive: {passiveUsersRevenue.toLocaleString('en-IN', { style: 'currency', currency: 'INR' })}</p>
        </div>
    </div>
    <div className="referred-users-revenue-box">
        <ion-icon name="share-social-outline"></ion-icon>
        <div>
            <h3>Revenue from Referred Users</h3>
            <p>{referredUsersRevenue.toLocaleString('en-IN', { style: 'currency', currency: 'INR' })}</p>
        </div>
    </div>
    <div className="subscription-churn-impact-box">
        <ion-icon name="trending-down-outline"></ion-icon>
        <div>
            <h3>Subscription Churn Impact</h3>
            <p>Estimated Loss: {churnImpact.toLocaleString('en-IN', { style: 'currency', currency: 'INR' })}</p>
        </div>
    </div>
</div>
        </div>
    );
};

export default DailyRevenue;